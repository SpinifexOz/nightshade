#! /bin/bash

###############################################
## Written by: crimsonmane                   ##
## https://github.com/crimsonmane/nightshade ##
## revised 20131214 @ 2318                   ##
###############################################

initialSetup(){
  tput setaf 1 #Red text
  echo "Checking if -pastebinit- is installed... Updating -inxi- in order to provide consistent output... Enter password to continue or CTRL+C to skip (-inxi- updates often and so should you)..."
  tput sgr0 #Reset text
  if ! dpkg -l | grep pastebinit
  then
      sudo aptitude install pastebinit
  fi
  sudo inxi -U
}

shareLink(){
  echo "^^ Share this URL with your helper!^^"
}

sniffSound(){
  inxi -Sc0 > temp.file
  inxi -Axc0 >> temp.file
  if head -1 temp.file | grep "Linux Mint 16";then
    find ~/.config/pulse -name \*source\* -printf '\n\n%c\n%f\n' -execdir cat {} ';' >> temp.file
  else
    find ~/.pulse -name \*source\* -printf '\n\n%c\n%f\n' -execdir cat {} ';' >> temp.file
  fi
  pastebinit temp.file
  shareLink
  rm temp.file
}

XorgLog(){
  egrep -wi 'WW|EE' /var/log/Xorg.0.log | pastebinit
  shareLink
}

syslog(){
  { inxi -c0 -FSRzdfulportcm20; egrep -i 'warn|error|critical' /var/log/syslog; } | pastebinit
  shareLink
}

medibuntu(){
  if [ -a /etc/apt/sources.list.d/medibuntu* ]
  then
    sudo rm /etc/apt/sources.list.d/medibuntu*
  fi
  sudo cp /etc/apt/sources.list /etc/apt/sources.list.bkup
  sudo sed -i '/medibuntu/d' /etc/apt/sources.list
}

ps3ms(){
  if ! dpkg -l | grep ps3mediaserver
  then
    echo "Do you want to INSTALL ps3mediaserver?"
    select toDo in "Yes" "No"
    do
      case $toDo in
	"Yes")
	  sudo apt-add-repository ppa:happy-neko/ps3mediaserver
	  sudo aptitude update
	  sudo aptitude install ps3mediaserver
	break;;
	"No") break;;
      esac
    done
  else
    echo "Do you want to REMOVE ps3mediaserver?"
    select toDo in "Yes" "No"
    do
      case $toDo in
	"Yes")
	  sudo aptitude purge -y ps3mediaserver
	  sudo apt-add-repository --remove ppa:happy-neko/ps3mediaserver
	  break;;
	"No")
	  break;;
      esac
    done
  fi
}

plex(){
  if ! dpkg -l | grep plexmediaserver
  then
    echo "Do you want to INSTALL plexmediaserver?"
    select toDo in "Yes" "No"
    do
      case $toDo in
	"Yes")
	  firefox http://www.plexapp.com/getplex/
	break;;
	"No") break;;
      esac
    done
  else
    echo "Do you want to REMOVE plexmediaserver?"
    select toDo in "Yes" "No"
    do
      case $toDo in
	"Yes")
	  sudo aptitude purge -y plexmediaserver
	  break;;
	"No")
	  break;;
      esac
    done
  fi
}

netflixDesktop(){
  if ! dpkg -l | grep netflix-desktop
  then
    echo "Do you want to INSTALL netflix-desktop?"
    select toDo in "Yes" "No"
    do
      case $toDo in
	"Yes")
	  if ! dpkg -l | grep pipelight-multi
	  then
	    sudo apt-add-repository ppa:ehoover/compholio
	  fi
	  sudo aptitude update
	  sudo aptitude install -y netflix-desktop
	break;;
	"No") break;;
      esac
    done
  else
    echo "Do you want to REMOVE netflix-desktop?"
    select toDo in "Yes" "No"
    do
      case $toDo in
	"Yes")
	  sudo aptitude purge -y netflix-desktop
	  if ! dpkg -l | grep pipelight-multi
	  then
	    sudo apt-add-repository --remove ppa:ehoover/compholio
	  fi
	  break;;
	"No")
	  break;;
      esac
    done
  fi
}

pipelight(){
  if ! dpkg -l | grep pipelight-multi
  then
    echo "Do you want to INSTALL Netflix/Pipelight?"
    select toDo in "Yes" "No"
    do
      case $toDo in
	"Yes")
	  if ! dpkg -l | grep pipelight
	  then
	    sudo aptitude purge pipelight
	  fi
	  if ! dpkg -l | grep netflix-desktop
	  then
	    sudo apt-add-repository ppa:ehoover/compholio
	  fi
	  sudo apt-add-repository ppa:mqchael/pipelight
	  sudo aptitude update
	  sudo aptitude install pipelight-multi
	  sudo pipelight-plugin --enable silverlight
	  rm -rf ~/.wine-pipelight
	  echo "*******************************************************************"
	  echo "** Please install both firefox addons that are about to pop up.  **"
	  echo "** Sometimes UAC doesn't work and you need to use the Overrider. **"
	  echo "** It's up to you to play with these to get netflix.com to work. **"
	  echo "** If your browser is open, please close it now.                 **"
	  echo "** If firefox is not your desired browser, it's up to you to     **"
	  echo "**                                get these addons yourself.     **"
	  echo "*******************************************************************"
	  read -n1 -r -p "Press any key to continue..."
	  firefox https://addons.mozilla.org/en-US/firefox/addon/user-agent-overrider/ https://addons.mozilla.org/en-us/firefox/addon/uacontrol/
	  break;;
	"No") break;;
      esac
    done
  else
    echo "Do you want to REMOVE Netflix/Pipelight?"
    select toDo in "Yes" "No"
    do
      case $toDo in
	"Yes")
	  sudo aptitude purge -y pipelight-multi
	  sudo apt-add-repository --remove ppa:mqchael/pipelight
	  if ! dpkg -l | grep netflix-desktop
	  then
	    sudo apt-add-repository --remove ppa:ehoover/compholio
	  fi
	  break;;
	"No")
	  break;;
      esac
    done
  fi
}

handbrake(){
  if ! dpkg -l | grep handbrake
  then
    echo "Do you want to INSTALL handbrake?"
    select toDo in "Yes" "No"
    do
      case $toDo in
	"Yes")
	  sudo add-apt-repository ppa:stebbins/handbrake-releases 
	  sudo aptitude update
	  sudo aptitude install -y handbrake-gtk handbrake-cli
	  break;;
	"No") break;;
      esac
    done
  else
    echo "Do you want to REMOVE handbrake?"
    select toDo in "Yes" "No"
    do
      case $toDo in
	"Yes")
	  sudo aptitude purge -y handbrake-gtk handbrake-cli
	  sudo apt-add-repository --remove ppa:stebbins/handbrake-releases
	  break;;
	"No")
	  break;;
      esac
    done
  fi
}

chrome(){
  if ! dpkg -l | grep google-chrome
  then
    echo "Do you want to INSTALL google-chrome-stable?"
    select toDo in "Yes" "No"
    do
      case $toDo in
	"Yes")
	  wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | sudo apt-key add - 
	  sudo sh -c 'echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/ferret-chrome.list'
	  sudo aptitude update
	  sudo aptitude install -y google-chrome-stable
	break;;
	"No") break;;
      esac
    done
  else
    echo "Do you want to REMOVE google-chrome-stable?"
    select toDo in "Yes" "No"
    do
      case $toDo in
	"Yes")
	  sudo aptitude purge -y google-chrome-stable
	  sudo rm /etc/apt/sources.list.d/ferret-chrome.list
	  break;;
	"No")
	  break;;
      esac
    done
  fi
}

bootRepair(){
  if ! dpkg -l | grep boot-repair
  then
    echo "Do you want to INSTALL boot-repair?"
    select toDo in "Yes" "No"
    do
      case $toDo in
	"Yes")
	  sudo apt-add-repository ppa:yannubuntu/boot-repair
	  sudo aptitude update
	  sudo aptitude install -y boot-repair
	  boot-repair &
	break;;
	"No") break;;
      esac
    done
  else
    echo "Do you want to REMOVE boot-repair?"
    select toDo in "Yes" "No"
    do
      case $toDo in
	"Yes")
	  sudo aptitude purge -y boot-repair
	  sudo apt-add-repository --remove ppa:yannubuntu/boot-repair
	  break;;
	"No")
	  break;;
      esac
    done
  fi
}

popularSoftware(){
  clear
  echo "$title1 - Software Menu"
    echo "$title2"
    select toDo in "Leave Ferret" "Plex Media Server" "PS3 Media Server" "Netflix-Desktop" "Netflix/Pipelight" "Google Chrome" "Handbrake"
    do
      case $toDo in
	"Leave Ferret") toDo=-1; break;;
	"Plex Media Server") plex; break;;
	"PS3 Media Server") ps3ms; break;;
	"Netflix-Desktop") netflixDesktop; break;;
	"Netflix/Pipelight") pipelight; break;;
	"Google Chrome") chrome; break;;
	"Handbrake") handbrake; break;;
      esac
    done
}

main(){
#  toDo=0
#  while [ $toDo -ne -1 ]
#  do
    clear
    echo "$title1 - Main Menu"
    echo "$title2"
    select toDo in "Leave Ferret" "Update Ferret" "Popular Software" "sniff sound" "sniff Xorg log" "sniff syslog" "Remove Medibuntu Repo" "Boot Repair"
    do
      case $toDo in
	"Leave Ferret") toDo=-1; break;;
	"Update Ferret") updateFerret; break;;
	"Popular Software") popularSoftware; break;;
	"sniff sound") sniffSound; break;;
	"sniff Xorg log") XorgLog; break;;
	"sniff syslog") syslog; break;;
	"Remove Medibuntu Repo") medibuntu; break;;
	"Boot Repair") bootRepair; break;;
      esac
    done
#  done
  echo "Thank you for using $title1!"
}

initialSetup
title1="Ferret (version 2)"
title2="------------------"
main
